import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.io.FileOutputStream;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class SaveButton extends DrawButton{
	
	private DrawGrid dGrid;
	
	private Pixel[][] pixels;

	private Font font1;
	
	private JFileChooser chooser;
	
	AnimationPanel aPan;
	
	public SaveButton(int x, int y, int w, int h, DrawGrid dg, AnimationPanel ap)
	{
		xPos = x;
		yPos = y;
		width = w;
		height = h;
		dGrid = dg;
		
		aPan = ap;
		
		font1 = new Font("Arial", Font.BOLD, 24);
		
		font1 = new Font("Arial", Font.BOLD, 34);
	}
	
	public void draw(Graphics g)
	{
		g.setColor(new Color(75, 185, 255));
		g.fillRect(xPos, yPos, width, height);
		g.setColor(Color.BLACK);
		g.drawRect(xPos, yPos, width, height);
		g.drawRect(xPos + 1, yPos + 1, width - 2, height - 2);
		g.drawRect(xPos + 2, yPos + 2, width - 4, height - 4);
		g.setFont(font1);
		g.drawString("SAVE", xPos + 14, yPos + 47);
	}
	
	public void leftMouseClicked(int x, int y)
	{
		saveImage();
	}
	
	private void saveImage()
	{
		int pw = dGrid.getPixelWidth();
		int ph = dGrid.getPixelHeight();
		
		pixels = new Pixel[pw][ph];
		
		for(int i = 0; i < pw; i++)
		{
			for(int j = 0; j < ph; j++)
			{
				pixels[i][j] = new Pixel(dGrid.getPixel(i, j));
			}
		}
		
	    chooser = new JFileChooser(); 
	    chooser.setCurrentDirectory(new java.io.File("."));
	    chooser.setDialogTitle("Save Robot");
	    chooser.setAcceptAllFileFilterUsed(false);
	    
	    if (chooser.showSaveDialog(aPan) == JFileChooser.APPROVE_OPTION) 
	    { 
	    	String fileDir = chooser.getSelectedFile().getAbsolutePath() + ".robi";
	    	saveToFile(fileDir);
	    }
	}
	
	private void saveToFile(String fDir)
	{	
		int bufferSize = (pixels.length * pixels.length) * 20;

        byte[] buffer = new byte[bufferSize];
        
        int ctr = 0;

        try 
        { 
	        for(int i = 0; i < pixels.length; i++)
	        {
	        	for(int j = 0; j < pixels.length; j++)
	        	{
	        		buffer[ctr++] = (byte)(pixels[i][j].x >> 24);
	        		buffer[ctr++] = (byte)(pixels[i][j].x >> 16);
	        		buffer[ctr++] = (byte)(pixels[i][j].x >> 8);
	        		buffer[ctr++] = (byte)pixels[i][j].x;
	        		
	        		buffer[ctr++] = (byte)(pixels[i][j].y >> 24);
	        		buffer[ctr++] = (byte)(pixels[i][j].y >> 16);
	        		buffer[ctr++] = (byte)(pixels[i][j].y >> 8);
	        		buffer[ctr++] = (byte)pixels[i][j].y;
	        		
	        		buffer[ctr++] = (byte)(pixels[i][j].getColor().getRed() >> 24);
	        		buffer[ctr++] = (byte)(pixels[i][j].getColor().getRed() >> 16);
	        		buffer[ctr++] = (byte)(pixels[i][j].getColor().getRed() >> 8);
	        		buffer[ctr++] = (byte)pixels[i][j].getColor().getRed();
	        		
	        		buffer[ctr++] = (byte)(pixels[i][j].getColor().getGreen() >> 24);
	        		buffer[ctr++] = (byte)(pixels[i][j].getColor().getGreen() >> 16);
	        		buffer[ctr++] = (byte)(pixels[i][j].getColor().getGreen() >> 8);
	        		buffer[ctr++] = (byte)pixels[i][j].getColor().getGreen();
	        		
	        		buffer[ctr++] = (byte)(pixels[i][j].getColor().getBlue() >> 24);
	        		buffer[ctr++] = (byte)(pixels[i][j].getColor().getBlue() >> 16);
	        		buffer[ctr++] = (byte)(pixels[i][j].getColor().getBlue() >> 8);
	        		buffer[ctr++] = (byte)pixels[i][j].getColor().getBlue();
	        	}
	        } 
	        
            FileOutputStream outputStream = new FileOutputStream(fDir);

            outputStream.write(buffer);
            outputStream.close();       

        }
        catch(Exception e) 
        {
           JOptionPane.showMessageDialog(null, "There was an error saving your file");
        }
	}
}
